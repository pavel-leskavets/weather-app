{"version":3,"sources":["Components/WeatherComponent/WeatherComponent.js","Components/FormComponent/FormComponent.js","App.js","index.js"],"names":["WeatherComponent","_this$props","this","props","country","city","temperature","humidity","icon","react_default","a","createElement","className","src","alt","Component","FormComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","value","target","handleSubmit","preventDefault","fetchWeather","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","response","result","_response","_result","_response2","_result2","wrap","_context","prev","next","state","radioGroup","firstApi","secondApi","fetch","sent","json","location","name","Math","round","current","temp_c","condition","console","log","t0","creatingQqueryString","t1","sys","main","temp","concat","weather","t2","stop","_x","apply","arguments","handleRadio","object","checked","keyOne","keyTwo","coords","_this2","navigator","geolocation","getCurrentPosition","coordinates","latitude","longitude","primaryUrl","onSubmit","id","type","placeholder","onChange","htmlFor","Components_WeatherComponent_WeatherComponent","App","Components_FormComponent_FormComponent","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c4c36921.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./WeatherComponent.css\";\nclass WeatherComponent extends Component {\n  render() {\n    const { country, city, temperature, humidity, icon } = this.props;\n\n    return (\n      <div className=\"weather-card\">\n        <div className=\"weather-card-info\">\n          <p>\n            {city}, {country}\n          </p>\n          <p>Temperature: {temperature}</p>\n          <p>Humidity: {humidity}</p>\n        </div>\n\n        <div className=\"weather-card-image\">\n          <img src={icon} alt=\"icon-logo\" className=\"weather-icon-image\" />\n        </div>\n      </div>\n    );\n  }\n}\nexport default WeatherComponent;\n","import React, { Component } from \"react\";\nimport WeatherComponent from \"../WeatherComponent/WeatherComponent\";\nimport \"./FormComponent.css\";\n\nclass FormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      coords: \"\",\n      keyOne: \"a7b04520659f47bbb7f183955181912\",\n      keyTwo: \"ef2666e3832e630f61b26d76484c4a1c\",\n      country: \"\",\n      city: \"\",\n      temperature: \"\",\n      humidity: \"\",\n      icon: \"\",\n      radioGroup: {\n        firstApi: false,\n        secondApi: false\n      }\n    };\n  }\n  componentWillMount() {\n    return navigator.geolocation.getCurrentPosition(location => {\n      let coordinates =\n        location.coords.latitude + \",\" + location.coords.longitude;\n      let primaryUrl = `https://api.apixu.com/v1/current.json?key=${\n        this.state.keyOne\n      }&q=${coordinates}`;\n      this.fetchWeather(primaryUrl);\n    });\n  }\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchWeather();\n    this.setState({ value: \"\" });\n  };\n\n  fetchWeather = async url => {\n    if (!this.state.radioGroup.firstApi && !this.state.radioGroup.secondApi) {\n      try {\n        const response = await fetch(url);\n        const result = await response.json();\n        this.setState({\n          country: result.location.country,\n          city: result.location.name,\n          temperature: Math.round(result.current.temp_c) + \"°C\",\n          humidity: result.current.humidity + \"%\",\n          icon: result.current.condition.icon\n        });\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (this.state.radioGroup.firstApi && this.state.value) {\n      try {\n        const response = await fetch(this.creatingQqueryString());\n        const result = await response.json();\n        this.setState({\n          country: result.location.country,\n          city: result.location.name,\n          temperature: Math.round(result.current.temp_c) + \"°C\",\n          humidity: result.current.humidity + \"%\",\n          icon: result.current.condition.icon\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (this.state.radioGroup.secondApi && this.state.value) {\n      try {\n        const response = await fetch(this.creatingQqueryString());\n        const result = await response.json();\n        this.setState({\n          country: result.sys.country,\n          city: result.name,\n          temperature: Math.round(result.main.temp - 273.15) + \"°C\",\n          humidity: result.main.humidity + \"%\",\n          icon: `http://openweathermap.org/img/w/${result.weather[0].icon +\n            \".png\"}`\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  handleRadio = e => {\n    let object = {};\n    object[e.target.value] = e.target.checked;\n    this.setState({ radioGroup: object });\n  };\n\n  creatingQqueryString = () => {\n    if (this.state.radioGroup.firstApi) {\n      return `https://api.apixu.com/v1/current.json?key=${\n        this.state.keyOne\n      }&q=${this.state.value}`;\n    } else if (this.state.radioGroup.secondApi) {\n      return `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.value\n      }&appid=${this.state.keyTwo}`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"form-component\">\n        <div className=\"change-form\">\n          <div className=\"search-input\">\n            <form onSubmit={this.handleSubmit} id=\"searchthis\">\n              <input\n                type=\"text\"\n                id=\"search-box\"\n                placeholder=\"\n                Enter the name of the city\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <button className=\"search-btn\">Search</button>\n            </form>\n          </div>\n\n          <div className=\"choice-of-service\">\n            <div className=\"service-input\">\n              <input\n                type=\"radio\"\n                name=\"firstApi\"\n                id=\"one\"\n                value=\"firstApi\"\n                checked={!!this.state.radioGroup.firstApi}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"one\" className=\"input-label\">\n                {\" \"}\n                Apixu\n              </label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                name=\"secondApi\"\n                id=\"two\"\n                value=\"secondApi\"\n                checked={!!this.state.radioGroup.secondApi}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"two\" className=\"input-label\">\n                {\" \"}\n                OpenWeatherMap{\" \"}\n              </label>\n            </div>\n          </div>\n        </div>\n        <WeatherComponent\n          country={this.state.country}\n          city={this.state.city}\n          temperature={this.state.temperature}\n          humidity={this.state.humidity}\n          icon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\nexport default FormComponent;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FormComponent from \"./Components/FormComponent/FormComponent\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}