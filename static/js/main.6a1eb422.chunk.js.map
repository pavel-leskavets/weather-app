{"version":3,"sources":["Components/WeatherComponent/WeatherComponent.js","Components/FormComponent/FormComponent.js","App.js","index.js"],"names":["WeatherComponent","_this$props","this","props","country","city","temperature","humidity","icon","react_default","a","createElement","className","src","alt","Component","FormComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","value","target","state","radioGroup","firstApi","type","secondApi","handleSubmit","preventDefault","fetchWeather","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","keyForLocalStorage","stateFromLocalStorage","response","result","_response","_result","_response2","_result2","wrap","_context","prev","next","toLocaleLowerCase","JSON","parse","localStorage","getItem","Date","now","requestTime","abrupt","fetch","sent","json","location","name","Math","round","current","temp_c","condition","t0","console","log","creatingQqueryString","t1","sys","main","temp","concat","weather","t2","localStorageSet","stop","_x","apply","arguments","handleRadio","object","checked","keyOne","keyTwo","setTypeOfService","currentState","setItem","stringify","coords","_this2","navigator","geolocation","getCurrentPosition","coordinates","latitude","longitude","primaryUrl","onClick","onSubmit","id","placeholder","onChange","htmlFor","Components_WeatherComponent_WeatherComponent","App","Components_FormComponent_FormComponent","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6a1eb422.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./WeatherComponent.css\";\nclass WeatherComponent extends Component {\n  render() {\n    const { country, city, temperature, humidity, icon } = this.props;\n\n    return (\n      <div className=\"weather-card\">\n        <div className=\"weather-card-info\">\n          <p>\n            {city}, {country}\n          </p>\n          <p>Temperature: {temperature}</p>\n          <p>Humidity: {humidity}</p>\n        </div>\n\n        <div className=\"weather-card-image\">\n          <img src={icon} alt=\"icon-logo\" className=\"weather-icon-image\" />\n        </div>\n      </div>\n    );\n  }\n}\nexport default WeatherComponent;\n","import React, { Component } from \"react\";\nimport WeatherComponent from \"../WeatherComponent/WeatherComponent\";\nimport \"./FormComponent.css\";\n\nclass FormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      coords: \"\",\n      type: \"\",\n      keyOne: \"a7b04520659f47bbb7f183955181912\",\n      keyTwo: \"ef2666e3832e630f61b26d76484c4a1c\",\n      requestTime: 0,\n      country: \"\",\n      city: \"\",\n      temperature: \"\",\n      humidity: \"\",\n      icon: \"\",\n      radioGroup: {\n        firstApi: false,\n        secondApi: false\n      }\n    };\n  }\n  componentWillMount() {\n    return navigator.geolocation.getCurrentPosition(location => {\n      let coordinates =\n        location.coords.latitude + \",\" + location.coords.longitude;\n      let primaryUrl = `https://api.apixu.com/v1/current.json?key=${\n        this.state.keyOne\n      }&q=${coordinates}`;\n      this.fetchWeather(primaryUrl);\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n    if (this.state.radioGroup.firstApi) {\n      this.setState({ type: \"firstApi\" });\n    } else if (this.state.radioGroup.secondApi) {\n      this.setState({ type: \"secondApi\" });\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.fetchWeather();\n    this.setState({ value: \"\" });\n  };\n\n  fetchWeather = async url => {\n    const TWO_HOURS = 7200000;\n    let keyForLocalStorage = (\n      this.state.value + this.state.type\n    ).toLocaleLowerCase();\n    let stateFromLocalStorage = JSON.parse(\n      localStorage.getItem(keyForLocalStorage)\n    );\n    if (\n      stateFromLocalStorage !== null &&\n      Date.now() - stateFromLocalStorage.requestTime < TWO_HOURS\n    ) {\n      this.setState({\n        country: stateFromLocalStorage.country,\n        city: stateFromLocalStorage.city,\n        temperature: stateFromLocalStorage.temperature,\n        humidity: stateFromLocalStorage.humidity,\n        icon: stateFromLocalStorage.icon,\n        requestTime: Date.now()\n      });\n      return;\n    }\n\n    if (!this.state.radioGroup.firstApi && !this.state.radioGroup.secondApi) {\n      try {\n        const response = await fetch(url);\n        const result = await response.json();\n        this.setState({\n          country: result.location.country,\n          city: result.location.name,\n          temperature: Math.round(result.current.temp_c) + \"°C\",\n          humidity: result.current.humidity + \"%\",\n          icon: result.current.condition.icon,\n          requestTime: Date.now()\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (this.state.radioGroup.firstApi && this.state.value) {\n      try {\n        const response = await fetch(this.creatingQqueryString());\n        const result = await response.json();\n        this.setState({\n          country: result.location.country,\n          city: result.location.name,\n          temperature: Math.round(result.current.temp_c) + \"°C\",\n          humidity: result.current.humidity + \"%\",\n          icon: result.current.condition.icon,\n          requestTime: Date.now()\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (this.state.radioGroup.secondApi && this.state.value) {\n      try {\n        const response = await fetch(this.creatingQqueryString());\n        const result = await response.json();\n        this.setState({\n          country: result.sys.country,\n          city: result.name,\n          temperature: Math.round(result.main.temp - 273.15) + \"°C\",\n          humidity: result.main.humidity + \"%\",\n          icon: `http://openweathermap.org/img/w/${result.weather[0].icon +\n            \".png\"}`,\n          requestTime: Date.now()\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.localStorageSet();\n  };\n\n  handleRadio = e => {\n    let object = {};\n    object[e.target.value] = e.target.checked;\n    this.setState({ radioGroup: object });\n  };\n  creatingQqueryString = () => {\n    if (this.state.radioGroup.firstApi) {\n      return `https://api.apixu.com/v1/current.json?key=${\n        this.state.keyOne\n      }&q=${this.state.value}`;\n    } else if (this.state.radioGroup.secondApi) {\n      return `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.value\n      }&appid=${this.state.keyTwo}`;\n    }\n  };\n  setTypeOfService = () => {\n    if (this.state.radioGroup.firstApi) {\n      this.setState({ type: \"firstApi\" });\n    } else if (this.state.radioGroup.secondApi) {\n      this.setState({ type: \"secondApi\" });\n    }\n  };\n  localStorageSet = () => {\n    let keyForLocalStorage = (\n      this.state.city + this.state.type\n    ).toLocaleLowerCase();\n    let currentState = {\n      city: this.state.city,\n      country: this.state.country,\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      icon: this.state.icon,\n      requestTime: this.state.requestTime\n    };\n    localStorage.setItem(keyForLocalStorage, JSON.stringify(currentState));\n  };\n  render() {\n    return (\n      <div className=\"form-component\" onClick={this.setTypeOfService}>\n        <div className=\"change-form\">\n          <div className=\"search-input\">\n            <form onSubmit={this.handleSubmit} id=\"searchthis\">\n              <input\n                type=\"text\"\n                id=\"search-box\"\n                placeholder=\"\n                Enter the name of the city\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <button className=\"search-btn\">Search</button>\n            </form>\n          </div>\n\n          <div className=\"choice-of-service\">\n            <div className=\"service-input\">\n              <input\n                type=\"radio\"\n                name=\"firstApi\"\n                id=\"one\"\n                value=\"firstApi\"\n                checked={!!this.state.radioGroup.firstApi}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"one\" className=\"input-label\">\n                {\" \"}\n                Apixu\n              </label>\n            </div>\n            <div className=\"service-input\">\n              <input\n                type=\"radio\"\n                name=\"secondApi\"\n                id=\"two\"\n                value=\"secondApi\"\n                checked={!!this.state.radioGroup.secondApi}\n                onChange={this.handleRadio}\n              />\n              <label htmlFor=\"two\" className=\"input-label\">\n                {\" \"}\n                OpenWeatherMap{\" \"}\n              </label>\n            </div>\n          </div>\n        </div>\n        <WeatherComponent\n          country={this.state.country}\n          city={this.state.city}\n          temperature={this.state.temperature}\n          humidity={this.state.humidity}\n          icon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\nexport default FormComponent;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FormComponent from \"./Components/FormComponent/FormComponent\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}